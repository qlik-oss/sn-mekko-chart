version: 2

defaults: &defaults
  working_directory: ~/project
  docker:
    - image: circleci/node:16.7

aliases:
  - &restore_yarn_cache
    name: Restore yarn cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-
  - &save_yarn_cache
    name: Save yarn cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --frozen-lockfile
      - save_cache: *save_yarn_cache
      - store_artifacts:
          path: package.json
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Build
          command: yarn run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Lint
          command: yarn run lint

  api-spec:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Validate that API spec is up to date
          command: |
            yarn run spec
            git diff --exit-code --name-only ./api-specifications/properties.json

  api-governance:
    machine: true
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Prepare API Compliance
          command: |
            docker pull ghcr.io/qlik-download/api-compliance
            docker create -v /specs --name specs alpine:3.4 /bin/true
            docker cp ./api-specifications/properties.json specs:/specs

      - run:
          name: Run API Compliance
          command: >
            VER=v$(cat ./package.json | jq -r '.version')
            echo $VER

            docker run --volumes-from specs
            -e SPEC_PATHS="6fb76a59-8ce3-4170-a739-e3a02d303602@/specs/properties.json"
            -e COMMIT_SHA="$CIRCLE_SHA1"
            -e RELEASE_TAG="$VER"
            -e CREDENTIALS_S3_SECRETKEY="$APICULTURIST_S3"
            -e CREDENTIALS_GITHUB="$APICULTURIST_GITHUB"
            -e CREDENTIALS_COLONY="$APICULTURIST_TOKEN"
            ghcr.io/qlik-download/api-compliance

  unit-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Unit tests
          command: |
            npx aw -c aw.config.js --mocha.bail false --mocha.reporter mocha-junit-reporter --mocha.reporterOptions.mochaFile ./coverage/junit/junit.xml
            if [ ! -z "$COVERALLS_REPO_TOKEN" ]; then
              echo "Uploading coverage results to coveralls.io..."
              cat ./coverage/unit/lcov.info | npx coveralls
            fi
      - store_artifacts:
          path: coverage/junit

  locale:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Validate locales
          command: yarn run validate:locale

  publish-dev:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: zip -r "sn-mekko-chart-ext.zip" "./sn-mekko-chart-ext"
      - store_artifacts:
          path: ./sn-mekko-chart-ext.zip

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Setup npm
          command: |
            set -eo pipefail
            # Amend auth token for access to public npm registry for @nebula.js packages
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: |
            set -euo pipefail
            PROJ_VER=v$(cat package.json | jq -r '.version')
            TAG_NAME=$(git tag --points-at HEAD)
            if [ "$TAG_NAME" == "$PROJ_VER" ]
            then
              echo "Running >> npm publish"
              npm publish
            fi

workflows:
  version: 2
  build-all:
    jobs:
      - install
      - locale:
          requires:
            - install
      - build:
          requires:
            - locale
      - unit-tests:
          requires:
            - build
      - api-spec:
          requires:
            - install
      - api-governance:
          context: api-compliance
          requires:
            - install
            - api-spec
      - lint:
          requires:
            - build
      - publish-dev:
          requires:
            - build
      - publish:
          requires:
            - build
            - locale
            - unit-tests
            - api-spec
            - api-governance
            - lint
          filters:
            branches:
              only:
                - master
